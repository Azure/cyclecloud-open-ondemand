- hosts: localhost
  gather_facts: no
  become: true

  tasks:
  - name: install jq
    ansible.builtin.package:
      name: jq
      state: present

  - name: Get the CycleCloud username
    shell: |
      jetpack config cyclecloud.config.username
    register: cyclecloud_username

  - name: get the CycleCloud password
    shell: |
      jetpack config cyclecloud.config.password
    register: cyclecloud_password

  - name: Get the CycleCloud URL
    shell: |
      jetpack config cyclecloud.config.web_server
    register: cyclecloud_url

  - name: Get list of clusters
    shell: |
      curl -k -u {{ cyclecloud_username.stdout }}:{{ cyclecloud_password.stdout }} {{ cyclecloud_url.stdout }}/cloud/clusters > /tmp/clusters.json

  - name: Get active Slurm clusters
    shell: |
      jq -r '.[]  | select(.BaseName == "slurm") | .ClusterName' /tmp/clusters.json
    register: clusters_raw

  - name: Set fact with active cluster list
    set_fact:
      clusters: "{{ clusters_raw.stdout | default('') | split('\n') | reject('equalto', '') | list }}"

  - name: Register Clusters
    include_role:
      name: register_cluster
      apply:
        become: true
    vars:
      cluster_name: "{{ item }}"
    loop: "{{ clusters }}"
    when: clusters | length > 0

  - name: Get registered clusters
    shell: |
      grep -l 'managed_by: "cyclecloud"' /etc/ood/config/clusters.d/slurm_*.yml | sed 's|.*/slurm_||;s|\.yml$||'
    register: registered_clusters_raw
    changed_when: false
    failed_when: false

  - name: Set fact with deleted cluster list
    set_fact:
      deleted_clusters: "{{ ((registered_clusters_raw.stdout | default('') | trim) | length > 0) | ternary(registered_clusters_raw.stdout | split('\n'), []) | difference(clusters | default([])) }}"

  - name: Remove config files and directories of deleted clusters from clusters.d
    shell: |
      rm -f "/etc/ood/config/clusters.d/login_{{ item | lower }}-login-"*.yml "/etc/ood/config/clusters.d/slurm_{{ item }}.yml" && rm -rf "/etc/ood/config/clusters.d/slurm_{{ item }}"
    args:
      executable: /bin/bash
    loop: "{{ deleted_clusters }}"
    when: deleted_clusters | length > 0

  - name: Gather active login nodes of active clusters by cluster
    shell: |
      jq -r '.nodes[] | select(.Status=="Ready") | select(.Template=="login") | .Hostname' /tmp/{{ item }}.json
    loop: "{{ clusters }}"
    register: login_nodes_by_cluster
    changed_when: false
    when: clusters | length > 0

  - name: Consolidate login nodes of active clusters into single list
    set_fact:
      login_nodes: "{{ login_nodes_by_cluster.results | map(attribute='stdout_lines') | flatten(1) }}"
    when: login_nodes_by_cluster is defined

  - name: Gather all registered login nodes 
    shell: |
      ls -p /etc/ood/config/clusters.d | grep '^login_' | grep -v '/$' | sed -e 's/^login_//' -e 's/\.yml$//'
    register: registered_login_nodes_raw

  - name: Set fact with deleted cluster list
    set_fact:
      deleted_login_nodes: "{{ ((registered_login_nodes_raw.stdout | default('') | trim) | length > 0) | ternary(registered_login_nodes_raw.stdout | split('\n'), []) | difference(login_nodes | default([])) }}"

  - name: Delete login node configuration files
    ansible.builtin.file:
      path: "/etc/ood/config/clusters.d/login_{{ item }}.yml"
      state: absent
    loop: "{{ deleted_login_nodes }}"
    when: deleted_login_nodes | length > 0