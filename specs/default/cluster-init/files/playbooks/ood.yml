- hosts: localhost
  gather_facts: no
  become: true
  vars_files: vars.yml

  tasks:
  - name: Wait 300 seconds for the nodes to be ready
    wait_for_connection:
      timeout: 300
  - name: Gather facts for first time
    setup:

  - name: Perform OS dependent configuration tasks
    include_tasks: "{{ansible_distribution}}/pre_install.yml"

  - name: set httpd_auth values
    ansible.builtin.include_vars:
      file: "vars-{{auth_method | lower}}.yml"

  - name: set variables for Ubuntu
    set_fact:
      ood_package: "ondemand={{ondemand_version}}"

  - name: Generate a Self Signed OpenSSL certificate
    shell: |
      mkdir -pv /etc/ssl/{{ ood_fqdn }}
      cd /etc/ssl/{{ ood_fqdn }}
      openssl req -nodes -new -x509 -keyout {{ ood_fqdn }}.key -out {{ ood_fqdn }}.crt -subj "/CN={{ ood_fqdn }}"
    args:
      creates: "/etc/ssl/{{ ood_fqdn }}/{{ ood_fqdn }}.crt"

  - name: Install Open OnDemand
    block:
      - name: Fake error
        shell: |
          echo "Fake error"
          exit 1
        register: role_result
        failed_when: role_result.failed

    rescue:
      - name: retry logic
        set_fact:
          retry_count: "{{ retry_count | default(0) + 1 }}"
        
      - name: Wait before retrying
        pause:
          seconds: 15
        when: retry_count < 5
  
      - name: Run the ood-ansible role for HTTPS
        include_role:
          name: ood-ansible
        vars:
          ondemand_package: '{{ ood_package }}'
          servername: '{{ ood_fqdn }}'
          httpd_port: 443
          ssl:
            - SSLCertificateFile "/etc/ssl/{{ ood_fqdn }}/{{ ood_fqdn }}.crt"
            - SSLCertificateKeyFile "/etc/ssl/{{ ood_fqdn }}/{{ ood_fqdn }}.key"
            - SSLProtocol all -SSLv2 -SSLv3 -TLSv1 -TLSv1.1
            - SSLCipherSuite ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256
            - SSLVerifyClient none
            - SSLProxyEngine On
            - SSLProxyVerify none
            - SSLProxyProtocol TLSv1.2
            - SSLProxyCheckPeerName off
            - SSLProxyVerify none
            - SSLProxyCheckPeerCN Off
            - SSLProxyCheckPeerName Off
            - SSLProxyCheckPeerExpire Off
        register: role_result
        failed_when: role_result.failed

      - name: Check if the role was successful
        assert:
          that: role_result.failed == false
          fail_msg: "The ood-ansible role failed to install Open OnDemand"


  - name: Perform OS dependent post installation tasks
    include_tasks: "{{ansible_distribution}}/post_install.yml"

  - name: remove the clusterd.d directory
    ansible.builtin.file:
      path: /etc/ood/config/clusters.d
      state: absent

  - name: Create the shared clusterd.d directory
    ansible.builtin.file:
      path: /shared/ood/config/clusters.d
      state: directory

  - name: Replace the clusters.d directory with a link to the shared directory
    ansible.builtin.file:
      src: /shared/ood/config/clusters.d
      dest: /etc/ood/config/clusters.d
      state: link

  # Create a script to run before the PUN is created, to set the user's environment if not exists
  # Defined in the pun_pre_hook_root_cmd variable set in the ood-overrides-common.yml file
  - name: Copy the pun_pre_hook script
    copy: 
      src: files/pun_pre_hook.sh
      dest: /etc/ood/config/pun_pre_hook.sh
      mode: 0755

  # Turn off the default bc_desktop
  - name: Turn off the default bc_desktop
    ansible.builtin.file:
      path: /var/www/ood/apps/sys/bc_desktop
      mode: '0600'
      state: directory

  - name: Copy application files
    copy:
      src: files/applications/
      dest: /var/www/ood/apps/sys
      mode: '0755'
